import { DeviceEventEmitter } from 'react-native';
import { EventEmitter, Subscription } from 'expo-modules-core/src/EventEmitter';
import NativeModulesProxy from 'expo-modules-core/src/NativeModulesProxy';
import { ProxyNativeModule } from 'expo-modules-core/src/NativeModulesProxy.types';
import { requireNativeViewManager } from 'expo-modules-core/src/NativeViewManagerAdapter';
import Platform from 'expo-modules-core/src/Platform';
import SyntheticPlatformEmitter from 'expo-modules-core/src/SyntheticPlatformEmitter';
import { CodedError } from 'expo-modules-core/src/errors/CodedError';
import { UnavailabilityError } from 'expo-modules-core/src/errors/UnavailabilityError';
import 'expo-modules-core/src/sweet/setUpErrorManager.fx';
export { default as deprecate } from 'expo-modules-core/src/deprecate';
export { DeviceEventEmitter, EventEmitter, NativeModulesProxy, ProxyNativeModule, Platform, Subscription, SyntheticPlatformEmitter, requireNativeViewManager, CodedError, UnavailabilityError, };
export * from 'expo-modules-core/src/requireNativeModule';
export * from 'expo-modules-core/src/TypedArrays.types';
/**
 * @deprecated renamed to `DeviceEventEmitter`
 */
export declare const RCTDeviceEventEmitter: import("react-native").DeviceEventEmitterStatic;
export * from 'expo-modules-core/src/PermissionsInterface';
export * from 'expo-modules-core/src/PermissionsHook';
//# sourceMappingURL=index.d.ts.map